import pandas as pd
import numpy as np
df = pd.read_excel("/home/affine/Desktop/attendance/login details.xlsx")
In_df = pd.DataFrame(df[df['InOut'] == 'In'].groupby(['Empid','Date','EmpName','InOut'])['Time'].min().reset_index())
Out_df = pd.DataFrame(df[df['InOut'] == 'Out'].groupby(['Empid','Date','EmpName','InOut'])['Time'].max().reset_index())
new_df = pd.merge(In_df,Out_df,on = ['Empid','Date','EmpName'],how = 'outer')
new_df.rename(columns={'InOut_x': 'In','InOut_y':'Out','Time_x':'Time_In','Time_y' : 'Time_Out'}, inplace=True)
df_more_hrs = new_df.fillna(0)
df_more_hrs = df_more_hrs[['Empid','Date','EmpName','Time_In','Time_Out']]
df_more_hrs
df_more_hrs['Hrs_Worked']= (pd.to_datetime(df_more_hrs['Time_Out']) - pd.to_datetime(df_more_hrs['Time_In'])).astype('timedelta64[h]')
df_more_hrs = df_more_hrs[(df_more_hrs['Hrs_Worked'] > 12) & (df_more_hrs['Hrs_Worked']<4000)]
df_more_hrs['Extra_Hrs'] = df_more_hrs['Hrs_Worked']-12
df_more_hrs
######## less than 6 hrs ######
df_less_hrs = new_df.fillna(0)
df_less_hrs = df_less_hrs[['Empid','Date','EmpName','Time_In','Time_Out']]
df_less_hrs['Hrs_Worked']= (pd.to_datetime(df_less_hrs['Time_Out']) - pd.to_datetime(df_less_hrs['Time_In'])).astype('timedelta64[h]')
df_less_hrs = df_less_hrs[(df_less_hrs['Hrs_Worked'] < 6) & (df_less_hrs['Hrs_Worked'] > -4000)]
df_less_hrs
#####late comers####
df_late_cmrs = new_df[['Empid','Date','EmpName','Time_In','Time_Out']]
df_late_cmrs = df_late_cmrs[pd.to_timedelta(df_late_cmrs['Time_In'])> pd.to_timedelta('10:00:00')]
df_late_cmrs['Hrs_Worked']= (pd.to_datetime(df_late_cmrs['Time_Out']) - pd.to_datetime(df_late_cmrs['Time_In'])).astype('timedelta64[h]')
df_late_cmrs
##### Working on weekends and holidays #####
df_weekends = new_df[['Empid','Date','EmpName','Time_In','Time_Out']]
df_weekends = df_weekends.rename(columns={'EmpName_In':'EmpName'})
df_weekends['Date'] = pd.to_datetime(df_weekends['Date'],format = '%d/%m/%Y')
df_weekends['Day_Of_Week'] = df_weekends['Date'].dt.dayofweek
days = {0:'Mon',1:'Tues',2:'Weds',3:'Thurs',4:'Fri',5:'Sat',6:'Sun'}
df_weekends['day_of_week'] = df_weekends['Day_Of_Week'].apply(lambda x: days[x])
holidays = ['2016-01-01','2016-01-15','2016-01-26','2016-03-24','2016-03-25','2016-04-08','2016-07-06'
            ,'2016-08-15','2016-09-05','2016-10-11','2016-10-31','2016-11-01']
df_weekends['Holiday'] = df_weekends['Date'].isin(holidays)
df_weekends = df_weekends[(df_weekends['day_of_week']=='Sat') | (df_weekends['day_of_week'] == 'Sun')| (df_weekends['Holiday'] == True)]

### Working on overnight ####

In_df = pd.DataFrame(df[df['InOut'] == 'In'].groupby(['Empid','Date','EmpName','InOut'])['Time']
                     .agg([pd.np.min, pd.np.max]).reset_index())
Out_df = pd.DataFrame(df[df['InOut'] == 'Out'].groupby(['Empid','Date','EmpName','InOut'])['Time']
                      .agg([pd.np.min, pd.np.max]).reset_index())
new_df = pd.merge(In_df,Out_df,on = ['Empid','Date','EmpName'],how = 'outer')
new_df.rename(columns={'InOut_x': 'In','InOut_y':'Out','Time_x':'Time_In','Time_y' : 'Time_Out'}, inplace=True)
new_df['Date'] = pd.to_datetime(df_weekends['Date'],format = '%d/%m/%Y')
new_df_min = new_df[(pd.to_timedelta(new_df['amin_y']) < pd.to_timedelta('08:00:00'))]
new_df_min.is_copy = False
new_df_min['PreviousDate'] = pd.to_datetime(new_df['Date'],format = '%d/%m/%Y')-timedelta(days=1)
overnight_df = new_df_min.astype('str')
overnight_df['Appended'] = overnight_df['Empid'] + '_' + overnight_df['PreviousDate']
overnight_new_df = new_df.astype('str')
overnight_new_df['Appended'] = overnight_new_df['Empid'] + '_' + overnight_new_df['Date']
overnight_df = overnight_df[['Empid','Date','EmpName','amin_x','amin_y','Appended']]
overnight_new_df = overnight_new_df[['Empid','Date','EmpName','amin_x','amin_y','Appended']]
over_night_df = pd.merge(overnight_df, overnight_new_df, how='inner', on=['Empid','EmpName','Appended'])
over_night_df = over_night_df[over_night_df['amin_x_x']!= 'nan']
over_night_df.rename(columns={'Date_x': 'Date_Out','Date_y':'Date_In','amin_x_y':'In_Time','amin_y_x' : 'Out_Time'}, inplace=True)
over_night_df = over_night_df[['Empid','EmpName','Date_In','In_Time','Date_Out','Out_Time']]
over_night_df['Worked_Hrs'] = (24 - pd.to_timedelta(over_night_df['In_Time']).astype('timedelta64[h]')) +(pd.to_timedelta(over_night_df['Out_Time']).astype('timedelta64[h]'))
over_night_df['over_night_Hrs'] = over_night_df['Out_Time']
over_night_df_modified = over_night_df.astype('str')
over_night_df_modified
###Leave but present###
from datetime import date, timedelta as td
leave_df = pd.read_excel('/home/affine/Desktop/attendance/Leave Availed Report.xlsx')
leave_df = leave_df[['Employee No','Name','From','To']]
leave_df.rename(columns={'Employee No': 'Empid','Name':'EmpName'}, inplace=True)
d1 = pd.DatetimeIndex(leave_df['From']).day
d2 = pd.DatetimeIndex(leave_df['To']).day
delta = d2-d1
delta = delta+1
A = pd.DataFrame()
for i in range(len(delta)):
    a = pd.DataFrame(pd.date_range(start = leave_df['From'][i],periods=delta[i],freq = timedelta(1)),columns = ['dates'])
    a['Empid'] =leave_df['Empid'][i]
    A = pd.concat([a,A],axis=0)
    
leave_new_df = pd.merge(A,leave_df,how='outer',on='Empid')
leave_new_df = leave_new_df[['Empid','EmpName','dates']]
leave_new_df.rename(columns={'dates': 'Date'}, inplace=True)
leave_new_df.drop_duplicates()
new_df['Date'] = pd.to_datetime(new_df['Date'],format = '%d/%m/%Y')
leave_new_new_df = pd.merge(leave_new_df,new_df,on = ['Empid','Date','EmpName'],how = 'inner')
leave_new_new_df = leave_new_new_df[['Empid','EmpName','Date','Time_In','Time_Out']]
leave_new_new_df['Hrs_Worked'] = (pd.to_datetime(leave_new_new_df['Time_Out']) - pd.to_datetime(leave_new_new_df['Time_In'])).astype('timedelta64[h]')
leave_new_df_modified = leave_new_new_df.astype('str')

###Not Swiped####
null_data = new_df[new_df.isnull().any(axis=1)]
null_data = null_data[['Empid','EmpName','Date','Time_In','Time_Out']]
not_swiped = null_data.astype('str')
not_swiped = not_swiped.replace('nan',' ')

##absent no leave###
start = pd.to_datetime('2016-03-01')
end = pd.to_datetime('2016-04-04')
dates = pd.DataFrame(pd.date_range(start, end, freq='D'),columns = ['Date'])
dates['Day_Of_Week'] = dates['Date'].dt.dayofweek
days = {0:'Mon',1:'Tues',2:'Weds',3:'Thurs',4:'Fri',5:'Sat',6:'Sun'}
dates['day_of_week'] = dates['Day_Of_Week'].apply(lambda x: days[x])
holidays = ['2016-01-01','2016-01-15','2016-01-26','2016-03-24','2016-03-25','2016-04-08','2016-07-06'
            ,'2016-08-15','2016-09-05','2016-10-11','2016-10-31','2016-11-01']
dates['Holiday'] = dates['Date'].isin(holidays)
working_dates = dates[((dates.day_of_week != 'Sat') & (dates.day_of_week != 'Sun')) & ((dates.Holiday != True))] 
working_dates = working_dates[['Date']]
#working_dates

                      
#absent_new_df = pd.merge(working_dates,new_df,on = ['Date'],how = 'inner')
#abse_new_df
#absent_new_df
#working_days
#new_df
unique_df = new_df.groupby(['Empid', 'EmpName']).count().reset_index()
unique_df = unique_df[['Empid','EmpName']]
unique_df['key'] = 0
working_dates['key'] = 0
repeat_df = unique_df.merge(working_dates, how='left', on = 'key')
repeat_df.drop('key',1, inplace=True)
absent_df = repeat_df.merge(new_df,how='left',on=['Empid','Date','EmpName'])
absent_df

writer = pd.ExcelWriter('/home/affine/Desktop/attendance/Processed_Sheet.xlsx', engine='xlsxwriter')
df_more_hrs.to_excel(writer, sheet_name='Working_More',index=False)
df_less_hrs.to_excel(writer, sheet_name='Working_Less',index=False)
df_late_cmrs.to_excel(writer, sheet_name='Late_Cmrs',index=False)
df_weekends.to_excel(writer,sheet_name='weekends',index=False)
writer.save()
